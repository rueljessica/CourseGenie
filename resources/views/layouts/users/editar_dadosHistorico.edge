<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{ title }}</title>
  @entryPointStyles('app')
  @entryPointScripts('app')
  <script>
    // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark')
      }
  </script>
</head>
@!section('body')

@if(auth.isAuthenticated)
@include('components/navbar_user')
@else
@include('components/navbar')
@endif

@include('components/users/editar_dadosHistorico')


<script src={{"../path/to/flowbite/dist/flowbite.min.js"}}></script>
<script>
  let codigo;
  let ano;
  let situacao;

  function openEditModal(nome, codigo, situacao, ano, professor, media, tipo, idEquiv) {
    this.ano = ano;
    this.codigo = codigo;
    this.situacao = situacao;

    const editModal = document.getElementById('editInfoModal');
    const editNomeField = document.getElementById('editNome');
    const editCodigoField = document.getElementById('editCodigo');
    const editSituacaoField = document.getElementById('editSituacao');
    const editAnoField = document.getElementById('editAno');
    const editProfessorField = document.getElementById('editProfessor');
    const editMediaField = document.getElementById('editMedia');
    const editTipoField = document.getElementById('editTipo');
    const editEquivalenteField = document.getElementById('editEquivalente');

    editNomeField.value = nome;
    editCodigoField.value = codigo;
    editSituacaoField.value = situacao;
    editAnoField.value = ano;
    editProfessorField.value = professor;
    editMediaField.value = media;
    editTipoField.value = tipo;
    editEquivalenteField.value = idEquiv;

    editModal.classList.remove('hidden');
    const equivalenteSelect = document.getElementById('divEquivalente');

    if(editEquivalenteField.value){
      equivalenteSelect.style.display = 'block';
    }else{
      equivalenteSelect.style.display = 'none';
    }
  }

  function closeEditModal() {
    const editModal = document.getElementById('editInfoModal');
    editModal.classList.add('hidden');
  }
  
  function saveEdit() {
    const modalForm = document.getElementById('modalForm');

    const anoAnterior = document.createElement('input');
    anoAnterior.type = 'text';
    anoAnterior.name = 'anoAnterior';
    anoAnterior.value = this.ano;

    const codigoAnterior = document.createElement('input');
    codigoAnterior.type = 'text';
    codigoAnterior.name = 'codigoAnterior';
    codigoAnterior.value = this.codigo;

    const situacaoAnterior = document.createElement('input');
    situacaoAnterior.type = 'text';
    situacaoAnterior.name = 'situacaoAnterior';
    situacaoAnterior.value = this.situacao;

    modalForm.appendChild(anoAnterior);
    modalForm.appendChild(codigoAnterior);
    modalForm.appendChild(situacaoAnterior);
    modalForm.submit();
  }

  document.addEventListener('DOMContentLoaded', function () {
    const editTipoField = document.getElementById('editTipo');

    editTipoField.addEventListener('change', function () {
      const selectedValue = this.value;
      const equivalenteSelect = document.getElementById('divEquivalente');

      if (selectedValue === 'EQUIVALENTE' && equivalenteSelect.style.display === 'none') {
        equivalenteSelect.style.display = 'block';
      }else{
        equivalenteSelect.style.display = 'none';
      }
    });
});
</script>

</html>