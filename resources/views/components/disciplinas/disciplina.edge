<section class="bg-gray-50 dark:bg-gray-900 h-screen p-4 sm:ml-64 sm:overflow-auto">
    <div class="grid grid-cols-1 mt-16">
        <div id="toast" class="fixed top-20 right-4 w-full max-w-xs p-4 text-gray-500 bg-gray-50 rounded-lg shadow dark:bg-gray-700 dark:text-gray-400" role="alert">
            <div class="flex">
                <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-gray-900 bg-gray-200 dark:bg-gray-800 rounded-lg dark:text-gray-400 dark:bg-blue-900">
                    <svg class="w-4 h-4" mlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                        <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z"/>
                    </svg>
                </div>
                <div class="ms-3 text-sm font-normal">
                    <span class="mb-1 text-sm font-semibold text-gray-900 dark:text-white tracking-wide">Atenção!</span>
                    <div class="mb-2 text-sm font-normal">As informações contidas nessa página são baseadas nos históricos cadastrados em nosso banco de dados.</div>  
                </div>
                <button type="button" class="ms-auto -mx-1.5 -my-1.5 items-center justify-center flex-shrink-0 text-gray-400 hover:text-gray-900 rounded-lg focus:ring-0 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:hover:bg-gray-700" data-dismiss-target="#toast" aria-label="Close">
                    <span class="sr-only">Close</span>
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                </button>
            </div>
        </div>
        <span class="text-gray-900 dark:text-white text-3xl pl-2 pb-1"> {{disciplina.codigo}} - {{disciplina.nome}}</span>
        <div class="col-span-1">
            <div class="bg-white shadow-md rounded-lg border-dashed dark:bg-gray-800 p-5 h-80 overflow-auto">
                <div>
                    <div>
                        <div class="{{ disciplina.preRequisitos.length > 0 ? '' : 'hidden' }}">
                            <span class="tracking-wide text-lg text-gray-900 dark:text-white">Pré-requisitos</span>
                            <div class="ml-auto mb-3">
                                @each(pre_requisito in disciplina.preRequisitos)  
                                    <span class="text-lg text-gray-500 dark:text-gray-400">
                                        {{ pre_requisito.nome }} ({{ pre_requisito.codigo }})
                                    </span>
                                @endeach
                            </div>
                            <div class="border border-opacity-15 mb-2 border-gray-600"></div>
                        </div>
                        <span class="tracking-wide text-xl text-gray-900 dark:text-white">Conteúdo Programático</span>
                    </div>
                    <div>  
                        <dl class="max-w-md text-gray-900 dark:text-white divide-y divide-gray-200  dark:divide-gray-700">
                            @each(unidade in disciplina.conteudoProgramaticos)
                                <div class="flex flex-col pt-3">
                                    <dt class="mb-1 text-lg text-gray-900 dark:text-white">{{unidade.unidade}}</dt>
                                    @each(topico in unidade.topicos)
                                        <dd class="pl-2 text-md text-gray-500 dark:text-gray-400">{{ topico }}</dd>
                                    @endeach
                                </div>
                            @endeach
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="grid grid-cols-2 gap-2">
        <div class="col-span-1">
            <div class="bg-white shadow-md rounded-lg border-dashed dark:bg-gray-800">
                <div class="flex justify-between m-2">
                    <dl>
                        <dt class="text-xl font-normal text-gray-900 dark:text-white pt-3 pl-3">Índice de Aprovação da Disciplina <span class="pl-2 text-gray-500 dark:text-gray-400">{{ indiceAprGlobal }}%</span></dt>
                    </dl>
                </div>
                <div class="text-sm m-3" id="bar-chart"></div>
            </div>
        </div>
        <div class="col-span-1">
            <div class="bg-white shadow-md rounded-lg border-dashed dark:bg-gray-800">
                <div class="flex justify-between mt-2">
                    <dl>
                        <dt class="text-xl font-normal text-gray-900 dark:text-white pt-3 pl-3">Média da Disciplina <span class="pl-2 text-gray-500 dark:text-gray-400">{{ mediaGlobal }}</span></dt>
                    </dl>
                </div>
                <div class="text-sm m-3" id="column-chart"></div>
            </div>
        </div>
    </div>
    
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        if (document.getElementById("bar-chart") && typeof ApexCharts !== 'undefined') {
            const dataApr = {{{ indiceAprovacaoPorProfessor }}}
            const professores = Object.keys(dataApr);
            const valores = Object.values(dataApr);
            let valsApr = [];
            let valsRep = [];
            
            valores.forEach(({ aprovacao, reprovacao }) => {
                valsApr.push(aprovacao);
                valsRep.push(reprovacao);
            });

            const chartApr = {
                series: [
                    {
                    name: "Aprovação",
                    color: "#81C784",
                    data: valsApr,
                    },
                    {
                    name: "Reprovação",
                    data: valsRep,
                    color: "#BA515F",
                    }
                ],
                chart: {
                    sparkline: {
                        enabled: false,
                    },
                    type: "bar",
                    width: "100%",
                    height: 400,
                    toolbar: {
                        show: false,
                    }
                },
                fill: {
                    opacity: 1,
                },
                plotOptions: {
                    bar: {
                        horizontal: true,
                        columnWidth: "100%",
                        borderRadiusApplication: "end",
                        borderRadius: 6,
                        dataLabels: {
                            position: "top",
                        },
                    },
                },
                legend: {
                    show: true,
                    position: "bottom",
                },
                dataLabels: {
                    enabled: true,
                },
                tooltip: {
                    shared: true,
                    intersect: false,
                },
                xaxis: {
                    labels: {
                        show: true,
                        style: {
                            fontFamily: "staatliches",
                            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                        },
                        formatter: function (value) {
                            return value + "%";
                        }
                    },
                    categories: professores,
                    axisTicks: {
                        show: false,
                    },
                    axisBorder: {
                        show: false,
                    },
                },
                yaxis: {
                    labels: {
                        show: true,
                        style: {
                            fontFamily: "staatliches",
                            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                        }
                    },
                    min: 0,
                    max: 100
                },
                grid: {
                    show: true,
                    strokeDashArray: 4,
                    padding: {
                        left: 2,
                        right: 2,
                        top: -20
                    },
                }
            }

            const chart = new ApexCharts(document.getElementById("bar-chart"), chartApr);
            chart.render();
        }

        if (document.getElementById("column-chart") && typeof ApexCharts !== 'undefined') {
            const dataMedia = {{{ mediasPorProfessor }}}
            const professores = Object.keys(dataMedia);
            const valores = Object.values(dataMedia);

            const chartMedia = {
                series: [
                    {
                    name: "Média",
                    color: "#009999",
                    data: valores,
                    },
                ],
                chart: {
                    sparkline: {
                        enabled: false,
                    },
                    type: "bar",
                    width: "100%",
                    height: "400",
                    tfontFamily: "staatliches",
                    toolbar: {
                        show: false,
                    },
                },
                fill: {
                    opacity: 1,
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: "70%",
                        borderRadiusApplication: "end",
                        borderRadius: 8,
                        dataLabels: {
                            position: "top",
                        },
                    },
                },
                legend: {
                    show: true,
                    position: "bottom",
                },
                dataLabels: {
                    enabled: true,
                },
                tooltip: {
                    shared: true,
                    intersect: false,
                    style: {
                        fontFamily: "staatliches",
                    },
                },
                states: {
                    hover: {
                        filter: {
                            type: "darken",
                            value: 1,
                        },
                    },
                },
                stroke: {
                    show: true,
                    width: 0,
                    colors: ["transparent"],
                },
                xaxis: {
                    labels: {
                        show: true,
                        style: {
                            fontFamily: "staatliches",
                            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                        },
                    },
                    categories: professores,
                    axisTicks: {
                        show: false,
                    },
                    axisBorder: {
                        show: false,
                    },
                },
                yaxis: {
                    labels: {
                        show: true,
                        style: {
                            fontFamily: "staatliches",
                            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                        }
                    },
                    min: 0,
                    max: 10
                },
                grid: {
                    show: false,
                    strokeDashArray: 4,
                    padding: {
                        left: 2,
                        right: 2,
                        top: -14
                    },
                }
            }

            const chart = new ApexCharts(document.getElementById("column-chart"), chartMedia);
            chart.render();
        }
    });
</script>